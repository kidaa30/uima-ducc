#!/usr/bin/env python
# -----------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
# -----------------------------------------------------------------------


import os
import sys

from ducc_util import DuccUtil
from properties  import Properties
import database as db

class DbConsole(DuccUtil):

    def __init__(self):
        DuccUtil.__init__(self)

    def main(self, rgv):
        # The dom gets loaded by the import above - or not
        if ( not db.domloaded ):            
            print "Unable to read database configuration; insure the installed Python supports xml.dom.minidom"
            print "Note that Python must be at least version 2.6 but not 3.x.  You are running version", sys.version_info
            return

        if ( self.db_parms == '--disabled--' ):
            print "Database is disabled."
            return

        (jvm_parms, classpath, db_rt, dburl, dbrest, dbroot) = self.db_parms
            

        main = 'com.orientechnologies.orient.graph.console.OGremlinConsole'

        jp = ''
        for k in jvm_parms.keys():
            v = jvm_parms[k]
            if ( v == None ):
                jp = jp + k + ' '
            else:
                jp = jp + k + '=' + v + ' '

        cmd = ' '.join([self.java(), jp, '-cp', classpath, main, ])

        here = os.getcwd()
        os.chdir(db_rt)
        pid = self.spawn(cmd)

                
if __name__ == "__main__":
    console = DbConsole()
    console.main(sys.argv[1:])
    

